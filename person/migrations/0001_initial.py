# Generated by Django 3.2 on 2021-05-17 12:12

import core.common.enums.enum_generic_status
import core.common.enums.enum_generic_type
import core.common.interfaces.abstract_model
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date_birth', models.DateField()),
                ('document', models.CharField(max_length=14, unique=True)),
                ('document_type', models.CharField(choices=[('CPF', 'CPF'), ('CNPJ', 'CNPJ'), ('RG', 'RG')], max_length=6)),
                ('gender', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], max_length=6)),
                ('status', models.SmallIntegerField(choices=[(1, 'ENABLED'), (0, 'DISABLED')], default=core.common.enums.enum_generic_status.EnumGenericStatus['ENABLED'])),
            ],
            options={
                'db_table': 'person',
            },
            bases=(models.Model, core.common.interfaces.abstract_model.AbstractModel),
        ),
        migrations.CreateModel(
            name='PersonPhone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=30)),
                ('type', models.IntegerField(choices=[(1, 'MAIN'), (2, 'WORK'), (3, 'COMMERCIAL'), (4, 'ADDITIONAL')], default=core.common.enums.enum_generic_type.EnumGenericType['MAIN'])),
                ('status', models.IntegerField(choices=[(1, 'ENABLED'), (0, 'DISABLED')], default=core.common.enums.enum_generic_status.EnumGenericStatus['ENABLED'])),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_phones', to='person.person')),
            ],
            options={
                'db_table': 'person_phone',
            },
            bases=(models.Model, core.common.interfaces.abstract_model.AbstractModel),
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('type', models.IntegerField(choices=[(1, 'MAIN'), (2, 'WORK'), (3, 'COMMERCIAL'), (4, 'ADDITIONAL')])),
                ('status', models.IntegerField(choices=[(1, 'ENABLED'), (0, 'DISABLED')], default=core.common.enums.enum_generic_status.EnumGenericStatus['ENABLED'])),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='person_emails', to='person.person')),
            ],
            options={
                'db_table': 'person_email',
            },
            bases=(models.Model, core.common.interfaces.abstract_model.AbstractModel),
            managers=[
                ('manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=255)),
                ('complement', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.IntegerField()),
                ('district', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=4)),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='person_address', to='person.person')),
            ],
            options={
                'db_table': 'person_address',
            },
        ),
    ]
